import * as ex from "excalibur";

export const SCENE_TRANSITION_DURATION = 500;

export const INVENTORY_ITEM_OFFSET = 5;
export const INVENTORY_ITEM_SPACING = 80;
export const INVENTORY_ITEM_PLACEMENT_MS = 25;

export const DOOR_WIDTH = 100;
export const DOOR_WIDTH_WITH_MARGIN = 150;
export const DOOR_SPRITE_SCALE = ex.vec(0.2, 0.2);
export const DOOR_COLLIDER_WIDTH = 90;
export const DOOR_COLLIDER_HEIGHT = 140;
export const DOOR_SPRITE_OFFSET_X = -55;
export const DOOR_SPRITE_OFFSET_Y = -30;
export const DOOR_ROW_OFFET_Y = 0;

export const DOOR_CONTENTS_SPRITE_SCALE = ex.vec(0.3, 0.3);
export const DOOR_CONTENTS_SPRITE_OFFSET_X = -30;
export const DOOR_CONTENTS_SPRITE_OFFSET_Y = -5;

export const UI_ICONS_SPRITE_SCALE = ex.vec(0.2, 0.2);

export const SOUNDTRACK_VOLUME = 0.3;
export const HURT_VOLUME = 0.2;
export const COIN_VOLUME = 0.6;
export const HEAL_VOLUME = 0.4;
export const STEPS_VOLUME = 0.5;
export const LOSE_VOLUME = 0.5;

export const SHOP_TOOLTIP = "Shop";
export const KEY_TOOLTIP = "Rusty Key:\nAllows you to open 1 locked door.";
export const ESCAPE_LADDER_TOOLTIP = "Escape Ladder:\nUse to ascend.";
export const SHIELD_TOOLTIP = "Shield:\nBlocks all of next attack.";
export const METAL_DETECTOR_TOOLTIP =
  "Treasure Map:\nUse to find all coins on floor.";
export const LIVING_SHIELD_TOOLTIP =
  "Warrior's Helm:\nGrants 1 shield each time you ascend.";
export const DOOR_OPENER_TOOLTIP =
  "Crowbar:\nOpens 1 random door every time you ascend.";
export const PIGGY_BANK_TOOLTIP =
  "Coin Chest:\nReplace empty doors with coins.";
export const DEATH_GRIP_TOOLTIP =
  "War Horn:\nReveal 1 enemy every time you ascend.";
export const SPYGLASS_TOOLTIP =
  "Waxen Flame:\nReveal the first door you would open each floor.";
export const EXTRA_LIFE_TOOLTIP =
  "Elixir of Vitality:\nRevive at full health next time you would die.";
export const LOCK_PICK_TOOLTIP =
  "Skeleton Key:\nOpens locked doors without Rusty Keys.";

export const DOOR_LAYOUTS = [
  [ex.vec(0, 0)],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, 0),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(0, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, 0),
  ],
  [
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, 0),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(0, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, 0),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN / 2),
  ],
  [
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, DOOR_WIDTH_WITH_MARGIN / 2),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, DOOR_WIDTH_WITH_MARGIN / 2),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(0, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN / 2),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN / 2),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(0, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, 0),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, 0),
    ex.vec((-DOOR_WIDTH_WITH_MARGIN * 3) / 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN / 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN / 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec((DOOR_WIDTH_WITH_MARGIN * 3) / 2, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(0, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, 0),
    ex.vec(0, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN),
  ],
  [
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, -DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(0, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, 0),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, 0),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(-DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(0, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN, DOOR_WIDTH_WITH_MARGIN),
    ex.vec(DOOR_WIDTH_WITH_MARGIN * 2, DOOR_WIDTH_WITH_MARGIN),
  ],
];
